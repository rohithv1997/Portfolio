{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Effect } from '@ngrx/effects';\nimport { AbstractHeaderEffect } from '../AbstractHeader.Effect';\nimport { SetHeaderAction } from '../Actions/SetHeader.Action';\nimport { HeaderActionNames } from '../HeaderActionNames';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/service/api.service\";\nexport class GetHeaderEffect extends AbstractHeaderEffect {\n  constructor(actions$, apiService) {\n    super(HeaderActionNames.GET_HEADER, actions$);\n    this.apiService = apiService;\n    this.getHeaderEffect = this.Effect;\n  }\n\n  switchMapCallback() {\n    return this.apiService.Header;\n  }\n\n  mapCallback(args) {\n    return new SetHeaderAction(args);\n  }\n\n}\n\nGetHeaderEffect.ɵfac = function GetHeaderEffect_Factory(t) {\n  return new (t || GetHeaderEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ApiService));\n};\n\nGetHeaderEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GetHeaderEffect,\n  factory: GetHeaderEffect.ɵfac\n});\n\n__decorate([Effect()], GetHeaderEffect.prototype, \"getHeaderEffect\", void 0);","map":null,"metadata":{},"sourceType":"module"}