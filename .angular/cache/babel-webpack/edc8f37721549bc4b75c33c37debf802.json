{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Effect } from '@ngrx/effects';\nimport { AbstractCertificationEffect } from '../AbstractCertification.Effect';\nimport { SetCertificationAction } from '../Actions/SetCertification.Action';\nimport { CertificationActionNames } from '../CertificationActionNames';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/service/api.service\";\nexport class GetCertificationEffect extends AbstractCertificationEffect {\n  constructor(actions$, apiService) {\n    super(CertificationActionNames.GET_CERTIFICATION, actions$);\n    this.apiService = apiService;\n    this.getCertificationEffect = this.Effect;\n  }\n\n  switchMapCallback() {\n    return this.apiService.Certification;\n  }\n\n  mapCallback(args) {\n    return new SetCertificationAction(args);\n  }\n\n}\n\nGetCertificationEffect.ɵfac = function GetCertificationEffect_Factory(t) {\n  return new (t || GetCertificationEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ApiService));\n};\n\nGetCertificationEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GetCertificationEffect,\n  factory: GetCertificationEffect.ɵfac\n});\n\n__decorate([Effect()], GetCertificationEffect.prototype, \"getCertificationEffect\", void 0);","map":null,"metadata":{},"sourceType":"module"}