{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Effect } from '@ngrx/effects';\nimport { AbstractProjectEffect } from '../AbstractProject.Effect';\nimport { SetProjectAction } from '../Actions/SetProject.Action';\nimport { ProjectActionNames } from '../ProjectActionNames';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/service/api.service\";\nexport class GetProjectEffect extends AbstractProjectEffect {\n  constructor(actions$, apiService) {\n    super(ProjectActionNames.GET_PROJECT, actions$);\n    this.apiService = apiService;\n    this.getProjectEffect = this.Effect;\n  }\n\n  switchMapCallback() {\n    return this.apiService.Project;\n  }\n\n  mapCallback(args) {\n    return new SetProjectAction(args);\n  }\n\n}\n\nGetProjectEffect.ɵfac = function GetProjectEffect_Factory(t) {\n  return new (t || GetProjectEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ApiService));\n};\n\nGetProjectEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GetProjectEffect,\n  factory: GetProjectEffect.ɵfac\n});\n\n__decorate([Effect()], GetProjectEffect.prototype, \"getProjectEffect\", void 0);","map":null,"metadata":{},"sourceType":"module"}