{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Effect } from '@ngrx/effects';\nimport { ContactActionNames } from '../ContactActionNames';\nimport { AbstractContactEffect } from '../AbstractContact.Effect';\nimport { SetContactAction } from '../Actions/SetContact.Action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/service/api.service\";\nexport class GetContactEffect extends AbstractContactEffect {\n  constructor(actions$, apiService) {\n    super(ContactActionNames.GET_CONTACT, actions$);\n    this.apiService = apiService;\n    this.getContactEffect = this.Effect;\n  }\n\n  switchMapCallback() {\n    return this.apiService.Contact;\n  }\n\n  mapCallback(args) {\n    return new SetContactAction(args);\n  }\n\n}\n\nGetContactEffect.ɵfac = function GetContactEffect_Factory(t) {\n  return new (t || GetContactEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ApiService));\n};\n\nGetContactEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GetContactEffect,\n  factory: GetContactEffect.ɵfac\n});\n\n__decorate([Effect()], GetContactEffect.prototype, \"getContactEffect\", void 0);","map":null,"metadata":{},"sourceType":"module"}